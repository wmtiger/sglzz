<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					fontFamily="微软雅黑" fontSize="15" 
					creationComplete="navigatorcontent1_creationCompleteHandler(event)"
					xmlns:mx="library://ns.adobe.com/flex/mx" width="940" height="640" xmlns:hero="editor.dataeditor.hero.*">
	
	<fx:Script>
		<![CDATA[
			import com.gamedata.template.HeroTemplate;
			
			import editor.evt.EditEvt;
			import editor.evt.EvtMgr;
			import editor.utils.CSVUtil;
			import editor.utils.FileUtil;
			import editor.utils.FilterUtil;
			import editor.utils.InsertUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			/////////////////////// 以下变量区
			
			[Bindable]
			private var _heroListData:ArrayCollection = new ArrayCollection();
			
			private var _heroListTotalData:Array = [];
			private var _searchTempList:Array = [];// 搜索的时候的临时用列表
			
			private var _crtEditObj:Object;// 当前正在修改的
			
			/////////////////////// 以上变量区
			
			public function get heroListTotalData():Array
			{
				return _heroListTotalData;
			}
			
			public function updateCrtHeroListData():void
			{
				ListCollectionView(heroList.dataProvider).itemUpdated(heroList.selectedItem);
			}

			protected function btnAddHero_clickHandler(event:MouseEvent):void
			{
				InsertUtil.addCell(EditEvt.ADD_ONE_HERO);
			}
			
			protected function navigatorcontent1_creationCompleteHandler(event:FlexEvent):void
			{
				EvtMgr.instance.addEventListener(EditEvt.ADD_ONE_HERO, onAddOneHero);
				
				_heroListTotalData = CSVUtil.parseCsvToList(FileUtil.getDBFileData(HeroTemplate.KEY));
				filterArr(_heroListTotalData);
				
				heroList.selectedIndex = 0;
			}
			
			protected function onAddOneHero(event:EditEvt):void
			{
				inputSearch.text = "";
				_heroListTotalData.push(event.data);
				filterArr(_heroListTotalData);
				heroList.selectedItem = event.data;
			}
			
			protected function filterArr(arr:Array):void
			{
				_searchTempList = FilterUtil.getFilterArr(arr, inputSearch.text + "");
				_heroListData.source = _searchTempList;
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function inputSearch_changeHandler(event:TextOperationEvent):void
			{
				if(inputSearch.text == ""){
					filterArr(_heroListTotalData);
				}else{
					setTimeout(delayFilterHeroArr,500);
				}
			}
			private function delayFilterHeroArr():void
			{
				filterArr(_searchTempList);
			}
			
			public function saveDataToCsv():void
			{
				FilterUtil.sortArrByTid(_heroListTotalData);// 放保存的时候来排序或者是在每次更改列表的时候排序
				var csv:String = CSVUtil.parseObjListToCsv(_heroListTotalData,HeroTemplate.CSV_HEAD);
				FileUtil.saveDBFile(HeroTemplate.KEY, csv);
			}
			
			protected function heroList_changeHandler(event:IndexChangeEvent):void
			{
				_crtEditObj = heroList.selectedItem;
				
				flushInfo();
			}
			
			protected function flushInfo():void
			{
				heroBaseInfoContent.editObj = _crtEditObj;
				heroSoulBaseInfoContent.editObj = _crtEditObj;
			}
			
			protected function heroList_valueCommitHandler(event:FlexEvent):void
			{
				heroList_changeHandler(null);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:List id="heroList" left="10" top="60" bottom="10" width="140" 
			valueCommit="heroList_valueCommitHandler(event)" 
			alternatingItemColors="[0xffffff,0xdfdfdf]" change="heroList_changeHandler(event)"
			dataProvider="{_heroListData}" itemRenderer="editor.dataeditor.hero.HeroRender"></s:List>
	<s:Button id="btnAddHero" left="10" top="30" width="140" height="24" label="增加武将"
			  click="btnAddHero_clickHandler(event)"/>
	<s:BorderContainer left="160" top="0" right="10" bottom="10">
		<hero:HeroBaseInfo id="heroBaseInfoContent" left="10" top="10" width="55%" height="65%"
						   backgroundColor="#DBEAEF"/>
		<hero:HeroSoulBaseInfo id="heroSoulBaseInfoContent" left="10" bottom="10" width="55%"
							   height="32%" backgroundColor="#DBEAEF"/>
		<hero:HeroSkillInfo id="heroSkillInfoContent" right="10" top="10" width="43%" height="35%"
							backgroundColor="#DBEAEF"/>
		<hero:HeroSpecialInfo id="heroSpecialInfoContent" right="10" top="234" width="43%" height="178"
							backgroundColor="#DBEAEF"/>
		<hero:HeroRemarkInfo id="heroRemarkInfoContent" right="10" bottom="40" width="43%"
							 height="168" backgroundColor="#DBEAEF"/>
		<s:Button id="btnDelete" right="10" bottom="10" label="删除"
				  click="btnDelete_clickHandler(event)"/>
	</s:BorderContainer>
	<s:TextInput id="inputSearch" left="40" top="0" width="110"
				 change="inputSearch_changeHandler(event)" prompt="输入Tid或名字"/>
	<s:Image x="10" y="0" width="26" height="26" smooth="true" source="assets/icons/icon_search.png"/>
</s:NavigatorContent>
