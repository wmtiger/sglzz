<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					fontFamily="微软雅黑" fontSize="15" 
					creationComplete="navigatorcontent1_creationCompleteHandler(event)"
					xmlns:mx="library://ns.adobe.com/flex/mx" width="940" height="640" xmlns:item="editor.dataeditor.item.*">
	<fx:Script>
		<![CDATA[
			import cfg.AppCfg;
			
			import editor.evt.EditEvt;
			import editor.evt.EvtMgr;
			import editor.utils.CSVUtil;
			import editor.utils.FileUtil;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			//-------------------
			// 变量定义区
			public static const KEY:String = "item";
			
			public static const CSV_HEAD:Array = ["templateId", "name", "type", "quality", "stackNum"];
			
			[Bindable]
			private var _listData:ArrayCollection = new ArrayCollection([]);
			[Bindable]
			private var _crtEditData:Object = {};
			
			private var _addItemWnd:AddItemWnd;
			
			//-------------------
			
			
			protected function navigatorcontent1_creationCompleteHandler(event:FlexEvent):void
			{
				EvtMgr.instance.addEventListener(EditEvt.ADD_ONE_ITEM, onAddOneItem);
				
				var list:Array = CSVUtil.parseCsvToList(FileUtil.getDBFileData(KEY));
				_listData.source = list;
				
			}
			
			protected function btnAddItem_clickHandler(event:MouseEvent):void
			{
				if(_addItemWnd == null){
					_addItemWnd = new AddItemWnd();
				}
				PopUpManager.addPopUp(_addItemWnd, FlexGlobals.topLevelApplication as DisplayObject, true);
			}
			
			protected function btnSave_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function btnSaveJson_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function itemList_changeHandler(event:IndexChangeEvent):void
			{
				// 选中某个render的时候，触发
				flushInfoContent();
				var obj:Object = event.currentTarget.selectedItem;
				setInfo(obj);
			}
			private function flushInfoContent():void{
				if(itemList){
					if(itemList.dataProvider.length <= 0){
						infoContent.visible = false;
						btnsGroup.visible = false;
					}else{
						infoContent.visible = true;
						btnsGroup.visible = true;
					}
				}
			}
			
			protected function itemList_addedToStageHandler(event:Event):void
			{
				flushInfoContent();
			}
			
			protected function onAddOneItem(event:EditEvt):void
			{
				_listData.addItem(event.data);
				PopUpManager.removePopUp(_addItemWnd);
				itemList.selectedItem = event.data;
			}
			
			protected function itemList_valueCommitHandler(event:FlexEvent):void
			{
				// 当用程序直接指定数据变化的时候，触发此方法
				flushInfoContent();
				_crtEditData = event.currentTarget.selectedItem;
//				var obj:Object = event.currentTarget.selectedItem;
//				setInfo(obj);
			}
			
			protected function setInfo(obj:Object):void{
//				itemBaseInfo.showByObj(obj);
			}
			
			protected function btnImport_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function btnSaveCSV_clickHandler(event:MouseEvent):void
			{
				var csv:String = CSVUtil.parseObjListToCsv(itemList.dataProvider.toArray(), CSV_HEAD);
				FileUtil.saveDBFile(KEY, csv);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:List id="itemList" left="10" top="40" bottom="40" width="140" change="itemList_changeHandler(event)"
			valueCommit="itemList_valueCommitHandler(event)" alternatingItemColors="[0xffffff,0xdfdfdf]"
			addedToStage="itemList_addedToStageHandler(event)" dataProvider="{_listData}" selectedIndex="0"
			itemRenderer="editor.dataeditor.item.ItemRender"></s:List>
	<s:Button id="btnAddItem" left="10" bottom="10" width="140" label="增加物品"
			  click="btnAddItem_clickHandler(event)"/>
	<s:BorderContainer id="infoContent" left="160" top="0" right="10" bottom="40">
		<item:ItemBaseInfo id="itemBaseInfo" editObj="{_crtEditData}" left="10" right="355" top="10" bottom="300" backgroundColor="#DBEAEF"/>
		
	</s:BorderContainer>
	
	<s:HGroup id="btnsGroup" left="300" right="10" bottom="10" height="30" gap="6" horizontalAlign="right"
			  verticalAlign="bottom">
		<s:Button id="btnDelete" label="删除" click="btnDelete_clickHandler(event)"/>
		<s:Button id="btnImport" label="导入" click="btnImport_clickHandler(event)"/>
		<s:Button id="btnSave" label="保存" click="btnSave_clickHandler(event)"/>
		<s:Button id="btnSaveJson" label="保存json" click="btnSaveJson_clickHandler(event)"/>
		<s:Button id="btnSaveCSV" label="保存CSV" click="btnSaveCSV_clickHandler(event)"/>
	</s:HGroup>
	
	<s:TextInput id="inputSearch" left="40" right="790" top="10" prompt="输入Tid或名字"/>
	<s:Image x="10" y="10" width="26" height="26" smooth="true" source="assets/icons/icon_search.png"/>
</s:NavigatorContent>
